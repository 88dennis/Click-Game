{"ast":null,"code":"var _jsxFileName = \"/Users/dennis/Desktop/HW-FILES/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport VillainCard from \"./components/VillainCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport villains from \"./images.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      villains\n    };\n  }\n\n  componentDidMount(data) {\n    randomizeArray = array => {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [array[j], array[i]];\n        array[i] = _ref[0];\n        array[j] = _ref[1];\n      }\n    };\n  } // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const villains = this.state.friends.filter(friend => villain.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ villains });\n  // };\n  // Map over this.state.friends and render a FriendCard component for each friend object\n\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Clicky Game\"), this.state.randomizeArray.map(villain => React.createElement(VillainCard, {\n      removeFriend: this.removeFriend,\n      id: villain.id,\n      key: villain.id,\n      name: villain.name,\n      image: villain.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dennis/Desktop/HW-FILES/click-game/src/App.js"],"names":["React","Component","VillainCard","Wrapper","Title","villains","App","state","componentDidMount","data","randomizeArray","array","i","length","j","Math","floor","random","render","map","villain","removeFriend","id","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAOA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNF,MAAAA;AADM,KAFkB;AAAA;;AAO1BG,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AAGtBC,IAAAA,cAAc,GAAGC,KAAK,IAAI;AAEtB,WAAK,IAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAA5B,EAA+BD,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AADuC,mBAEhB,CAACD,KAAK,CAACG,CAAD,CAAN,EAAWH,KAAK,CAACC,CAAD,CAAhB,CAFgB;AAEtCD,QAAAA,KAAK,CAACC,CAAD,CAFiC;AAE5BD,QAAAA,KAAK,CAACG,CAAD,CAFuB;AAG1C;AAEJ,KAPD;AASD,GAnByB,CAuB1B;AACA;AACA;AACA;AACA;AACA;AAIA;;;AACAI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGG,KAAKX,KAAL,CAAWG,cAAX,CAA0BS,GAA1B,CAA8BC,OAAO,IAEpC,oBAAC,WAAD;AACE,MAAA,YAAY,EAAE,KAAKC,YADrB;AAEE,MAAA,EAAE,EAAED,OAAO,CAACE,EAFd;AAGE,MAAA,GAAG,EAAEF,OAAO,CAACE,EAHf;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACG,IAJhB;AAKE,MAAA,KAAK,EAAEH,OAAO,CAACI,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CAHH,CADF;AAiBD;;AAnDyB;;AAuD5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport VillainCard from \"./components/VillainCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport villains from \"./images.json\";\n\n\n\n\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    villains\n    \n  };\n\n  componentDidMount(data) {\n    \n  \n    randomizeArray = array => {\n     \n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    \n    };\n\n  }\n\n\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const villains = this.state.friends.filter(friend => villain.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ villains });\n  // };\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Title>Clicky Game</Title>\n\n        {this.state.randomizeArray.map(villain => (\n\n          <VillainCard\n            removeFriend={this.removeFriend}\n            id={villain.id}\n            key={villain.id}\n            name={villain.name}\n            image={villain.image}\n \n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}