{"ast":null,"code":"var _jsxFileName = \"/Users/dennis/Desktop/HW-FILES/click-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport VillainCard from \"./components/VillainCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport villains from \"./images.json\";\nconsole.log(villains);\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      villains,\n      clicked: false,\n      score: 0,\n      losses: 0,\n      wins: 0,\n      guesses: []\n    };\n\n    this.handleBtnClick = event => {// // Get the data-value of the clicked button\n      // const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n      // // Clone this.state to the newState object\n      // // We'll modify this object and use it to set our component's state\n      // const newState = { ...this.state };\n      // if (btnType === \"pick\") {\n      //   // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n      //   newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n      //   // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n      //   newState.matchCount = newState.match\n      //     ? newState.matchCount + 1\n      //     : newState.matchCount;\n      // } else {\n      //   // If we thumbs down'ed the dog, we haven't matched with it\n      //   newState.match = false;\n      // }\n      // // Replace our component's state with newState, load the next dog image\n      // this.setState(newState);\n      // this.loadNextDog();\n    };\n  }\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const villains = this.state.villains.filter(villain => villain.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ villains });  \n  // };\n  render() {\n    // const shuffledVillains = ;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Clicky Game\"), this.state.villains.map(villain => React.createElement(VillainCard, {\n      removeFriend: this.removeFriend,\n      id: villain.id,\n      key: villain.id,\n      name: villain.name,\n      image: villain.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dennis/Desktop/HW-FILES/click-game/src/App.js"],"names":["React","Component","VillainCard","Wrapper","Title","Navbar","villains","console","log","shuffleArray","array","i","length","j","Math","floor","random","temp","App","state","clicked","score","losses","wins","guesses","handleBtnClick","event","render","map","villain","removeFriend","id","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAGAC,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAvB;;AACA,SAAOD,CAAC,GAAG,CAAX,EAAcA,CAAC,EAAf,EAAmB;AACjB,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,UAAMM,IAAI,GAAGP,KAAK,CAACC,CAAD,CAAlB;AACAD,IAAAA,KAAK,CAACC,CAAD,CAAL,GAAWD,KAAK,CAACG,CAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,CAAD,CAAL,GAAWI,IAAX;AACD;;AACD,SAAOP,KAAP;AACD;;AAED,MAAMQ,GAAN,SAAkBjB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BkB,KAF0B,GAElB;AACNb,MAAAA,QADM;AAENc,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,KAAK,EAAE,CAHD;AAINC,MAAAA,MAAM,EAAE,CAJF;AAKNC,MAAAA,IAAI,EAAE,CALA;AAMNC,MAAAA,OAAO,EAAC;AANF,KAFkB;;AAAA,SAY1BC,cAZ0B,GAYTC,KAAK,IAAI,CAExB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAnCyB;AAAA;;AAqC1B;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AAEP;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,EAKG,KAAKR,KAAL,CAAWb,QAAX,CAAoBsB,GAApB,CAAwBC,OAAO,IAE9B,oBAAC,WAAD;AACE,MAAA,YAAY,EAAE,KAAKC,YADrB;AAEE,MAAA,EAAE,EAAED,OAAO,CAACE,EAFd;AAGE,MAAA,GAAG,EAAEF,OAAO,CAACE,EAHf;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACG,IAJhB;AAKE,MAAA,KAAK,EAAEH,OAAO,CAACI,KALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CALH,CAFA,CADF;AAuBD;;AAxEyB;;AA2E5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport VillainCard from \"./components/VillainCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Navbar from \"./components/Navbar\";\nimport villains from \"./images.json\";\n\n\nconsole.log(villains)\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    villains,\n    clicked: false,\n    score: 0,\n    losses: 0,\n    wins: 0,\n    guesses:[]\n  };\n//if clicked guesses includes\n\n  handleBtnClick = event => {\n    \n    // // Get the data-value of the clicked button\n    // const btnType = event.target.attributes.getNamedItem(\"data-value\").value;\n    // // Clone this.state to the newState object\n    // // We'll modify this object and use it to set our component's state\n    // const newState = { ...this.state };\n\n    // if (btnType === \"pick\") {\n    //   // Set newState.match to either true or false depending on whether or not the dog likes us (1/5 chance)\n    //   newState.match = 1 === Math.floor(Math.random() * 5) + 1;\n\n    //   // Set newState.matchCount equal to its current value or its current value + 1 depending on whether the dog likes us\n    //   newState.matchCount = newState.match\n    //     ? newState.matchCount + 1\n    //     : newState.matchCount;\n    // } else {\n    //   // If we thumbs down'ed the dog, we haven't matched with it\n    //   newState.match = false;\n    // }\n    // // Replace our component's state with newState, load the next dog image\n    // this.setState(newState);\n    // this.loadNextDog();\n  };\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const villains = this.state.villains.filter(villain => villain.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ villains });  \n  // };\n\n  render() {\n    \n    // const shuffledVillains = ;\n\n\n    return (\n      <div>\n      <Navbar></Navbar>\n      <Wrapper>\n\n\n        <Title>Clicky Game</Title>\n\n        {this.state.villains.map(villain => (\n          \n          <VillainCard\n            removeFriend={this.removeFriend}\n            id={villain.id}\n            key={villain.id}\n            name={villain.name}\n            image={villain.image}\n          />\n          \n        ))}\n      </Wrapper>\n\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}